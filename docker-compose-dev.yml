services:
  postgres:
    container_name: wm_app_postgres
    image: postgres:17
    restart: always
    env_file:
      - ./backend/envs/.env.dev
    ports:
      - "5432:5432"
    volumes:
      - ./backend/postgres_db:/var/lib/postgresql/data

  backend:
    container_name: wm_app_backend
    build:
      context: ./backend
    ports:
      - "8000:8000"
    restart: always
    env_file:
      - ./backend/envs/.env.dev
    environment:
      - GUNICORN_WORKERS=10
    depends_on:
      - postgres
    volumes:
      - ./backend/static_files:/var/www/wm_system/static_files/
    platform: linux/amd64

  frontend:
    container_name: wm_app_frontend
    image: ppavlovp/private_images:wm-system-dev
#    build:
#      context: .
#      dockerfile: ./frontend/Dockerfile_dev
    ports:
      - "3000:3000"
    restart: always
    env_file:
      - ./frontend/envs/.env.dev
#    command: bash -c "npm run docker-build && npm run docker-start"
    depends_on:
      - backend
    volumes:
      - ./frontend:/frontend
    
  nginx:
    container_name: wm_app_nginx
    build:
      context: .
      dockerfile: ./nginx/dev/Dockerfile
    restart: always
    volumes:
      - ./nginx/dev/custom_pages/50x.html:/usr/share/nginx/html/50x.html:ro
      - ./nginx/prod/logs:/var/log/nginx
      - ./backend/static_files:/var/www/wm_system/static_files/:ro
    ports:
      - "81:80"
      - "443:443"
    depends_on:
      - backend
      - frontend

