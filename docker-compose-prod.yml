services:
  postgres:
    container_name: wm_app_postgres
    image: postgres:17
    restart: always
    env_file:
      - ./backend/envs/.env.prod
    ports:
      - "5432:5432"
    volumes:
      - ./backend/postgres_db:/var/lib/postgresql/data

  backend:
    container_name: wm_app_backend
    build:
      context: ./backend
    ports:
      - "8000:8000"
    restart: always
    env_file:
      - ./backend/envs/.env.prod
    depends_on:
      - postgres
    volumes:
      - ./backend/staticfiles:/tmp/wm_system/static_files/
    platform: linux/amd64

  frontend:
    container_name: wm_app_frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "3000:3000"
    restart: on-failure
    env_file:
      - ./frontend/envs/.env.prod
#    command: bash -c "npm run build && npm run start"
    depends_on:
      - backend
    
  nginx:
    container_name: wm_app_nginx
    image: nginx
    restart: on-failure
    volumes:
      - ./nginx/prod/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/prod/custom_pages/50x.html:/usr/share/nginx/html/50x.html:ro
      - ./nginx/prod/conf.d:/etc/nginx/conf.d/:ro
      - ./nginx/prod/logs:/var/log/nginx
      - ./backend/staticfiles:/tmp/wm_system/static_files/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend

